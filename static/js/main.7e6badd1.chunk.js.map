{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","state","setstate","titles","settitles","getAllGPX","str","forEach","d","lat","lng","useEffect","Axios","get","then","MYJSON","prop","quests","filter","obj","pos","arr","map","mapObj","indexOf","catch","err","console","log","downloadTxtFile","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6QAgEeA,MAxDf,WACE,IADa,EAEaC,mBADT,CAAEC,KAAM,KADZ,mBAENC,EAFM,KAECC,EAFD,OAIeH,mBAAS,CAAEI,OAAQ,KAJlC,mBAINA,EAJM,KAIEC,EAJF,KA2Bb,SAASC,EAAUL,GACjB,IAAIM,EAAM,GAKV,OAHAN,EAAKO,SAAQ,SAACC,GACZF,GAAG,UAjCI,QAiCJ,iBAAuBE,EAAEC,IAAzB,kBAAsCD,EAAEE,IAAxC,YAhCK,cAkCJ,GAAN,OArCQ,6EAqCR,OAAmBJ,GAAnB,OApCQ,UASVK,qBAAU,WAENC,IAAMC,IAAI,aACPC,MAAK,SAACd,GAYb,IAAyBe,EAAQC,EAXzBd,EAAS,2BAAKD,GAAN,IAAaD,KAAMA,EAAKA,KAAKiB,UACrCb,EAAU,2BACLD,GADI,IAEPA,QAQeY,EARSf,EAAKA,KAAKiB,OAQXD,EARmB,oBAS3CD,EAAOG,QAAO,SAACC,EAAKC,EAAKC,GAC9B,OAAOA,EAAIC,KAAI,SAACC,GAAD,OAAYA,EAAOP,MAAOQ,QAAQL,EAAIH,MAAWI,YAP7DK,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAG/B,IAiBH,IAAMG,EAAkB,WACtB,IAAMC,EAAUC,SAASC,cAAc,KACjCC,EAAO,IAAIC,KAAK,CAAC7B,EAAUJ,EAAMD,OAAQ,CAC7CmC,KAAM,6BAERL,EAAQM,KAAOC,IAAIC,gBAAgBL,GACnCH,EAAQS,SAAW,aACnBR,SAASS,KAAKC,YAAYX,GAC1BA,EAAQY,SAEV,OACE,sBAAKC,UAAU,MAAf,UACE,uBACA,wBAAQC,QAASf,EAAjB,sBACA,wBAAQe,QAASf,EAAjB,sBACA,2BC/CSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,M","file":"static/js/main.7e6badd1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nconst header = `<?xml version=\"1.0\" encoding=\"UTF-8\"?><gpx version=\"1.1\" creator=\"vinay\">`;\r\nconst footer = `</gpx>`;\r\nconst tagOpen = `<wpt `;\r\nconst tagClose = `></wpt>`;\r\nfunction App() {\r\n  const initData = { data: [] };\r\n  const [state, setstate] = useState(initData);\r\n\r\n  const [titles, settitles] = useState({ titles: [] });\r\n\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      Axios.get(\"/stardust\")\r\n        .then((data) => {\r\n          setstate({ ...state, data: data.data.quests });\r\n          settitles({\r\n            ...titles,\r\n            titles: distinctRecords(data.data.quests, \"conditions_string\"),\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  function distinctRecords(MYJSON, prop) {\r\n    return MYJSON.filter((obj, pos, arr) => {\r\n      return arr.map((mapObj) => mapObj[prop]).indexOf(obj[prop]) === pos;\r\n    });\r\n  }\r\n\r\n  function getAllGPX(data) {\r\n    let str = \"\";\r\n\r\n    data.forEach((d) => {\r\n      str += `${tagOpen} lat=\"${d.lat}\" lon=\"${d.lng}\"${tagClose}`;\r\n    });\r\n    return `${header}${str}${footer}`;\r\n  }\r\n\r\n  const downloadTxtFile = () => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([getAllGPX(state.data)], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"myFile.gpx\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <hr />\r\n      <button onClick={downloadTxtFile}>Download</button>\r\n      <button onClick={downloadTxtFile}>Download</button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}